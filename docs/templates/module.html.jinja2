{% extends "default/module.html.jinja2" %}


{#
	JavaScript hacks
#}
{% block head %}
	<script type="module">
		document.addEventListener('DOMContentLoaded', () => {
			// Remove all hyperlinks inside code blocks
			document.querySelectorAll('.pdoc .docstring pre code a, .pdoc .summary pre code a').forEach((a) => a.removeAttribute('href'));

			// Do not link to the current section from within its own docstring
			document.querySelectorAll('.pdoc .docstring a, .pdoc .attr a, .pdoc .summary a').forEach((a) => {
				const href = a.getAttribute('href');
				if (href === null) return;
				const hrefParts = href.split('#');
				if (hrefParts.length < 2) return;

				const id = hrefParts[1];
				const target = document.getElementById(id);
				if (target?.contains(a)) {
					a.removeAttribute('href');
				}
			});
		});
	</script>
{% endblock %}


{#
	Abbreviate certain classes in type hints
#}
{% macro shorttypes(s) %}
	{%- autoescape false -%}
		{{- s | replace("parsetypes._common.", "") | replace("parsetypes.", "") | replace('<span class="n">parsetypes</span><span class="o">.</span>', "") | replace('<span class="n">parsetypes</span><span class="o">.</span><span class="n">_common</span><span class="o">.</span>', "") | replace("collections.abc.", "") | replace('<span class="n">collections</span><span class="o">.</span><span class="n">abc</span><span class="o">.</span>', "") -}}
	{%- endautoescape -%}
{% endmacro %}


{#
	Apply shorttypes to the signature of each member listing
#}
{% macro class(cls) -%}
	{{ shorttypes(default_class(cls)) }}
{% endmacro %}

{% macro function(fn) -%}
	{{ shorttypes(default_function(fn)) }}
{% endmacro %}

{% macro submodule(mod) -%}
	{{ shorttypes(default_submodule(mod)) }}
{% endmacro %}

{% macro variable(var) -%}
	{{ shorttypes(default_variable(var)) }}
{% endmacro %}


{#
	Annotations for nav menu
#}
{% macro nav_members(members) %}
	<ul class="memberlist">
		{% for m in members if (is_public(m) | trim) %}
			<li>
				{% if m.kind == "class" %}
					<a class="class" href="#{{ m.qualname }}">{{ m.qualname }}</a>
					{% if m.own_members %}
						{{ nav_members(m.own_members) | indent(12) }}
					{% endif %}
				{% elif m.kind == "module" %}
					<a class="module" href="#{{ m.name }}">{{ m.name }}</a>
				{% elif m.kind == "function" %}
					{% if m.name == "__init__" %}
						<a class="function" href="#{{ m.qualname }}">{{ m.qualname.split(".")[-2] }}</a>
					{% elif "@staticmethod" in m.decorators %}
						<a class="function" href="#{{ m.qualname }}">{{ m.name }}<span class="decorator">() @staticmethod</span></a>
					{% elif "@classmethod" in m.decorators %}
						<a class="function" href="#{{ m.qualname }}">{{ m.name }}<span class="decorator">() @classmethod</span></a>
					{% else %}
						<a class="function" href="#{{ m.qualname }}">{{ m.name }}<span class="decorator">()</span></a>
					{% endif %}
				{% elif m.kind == "variable" %}
					{% if m.is_classvar %}
						<a class="variable" href="#{{ m.qualname }}">{{ m.name }}<span class="decorator">: ClassVar</span></a>
					{% else %}
						<a class="variable" href="#{{ m.qualname }}">{{ m.name }}</a>
					{% endif %}
				{% else %}
					<a class="{{ m.kind }}" href="#{{ m.qualname }}">{{ m.name }}</a>
				{% endif %}
			</li>
		{% endfor %}
	</ul>
{% endmacro %}


{#
	Keep tabs in docstring
#}
{% macro preserve_tabs(s, n) -%}
	{%- autoescape false -%}
		{%- set lines = s.splitlines() -%}
		{%- for line in lines -%}
			{{ '\n' + ((line.__len__() - line.lstrip().__len__()) // n) * '\t' + line.lstrip() }}
		{%- endfor -%}
	{%- endautoescape -%}
{%- endmacro %}

{% macro docstring(doc) %}
	{% if doc.docstring %}
		{# {{ default_docstring(doc) }} #}
		{#
			doc.docstring has all tabs converted to 8 spaces
			to_html converts all tabs to 4 spaces
		#}
		{%- set docstring_html = preserve_tabs(doc.docstring, 8) | to_markdown | to_html -%}
		<div class="docstring">{{ preserve_tabs(docstring_html, 4) | linkify(namespace=doc.qualname) }}</div>
	{% endif %}
{% endmacro %}
